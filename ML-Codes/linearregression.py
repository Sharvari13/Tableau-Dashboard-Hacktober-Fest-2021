# -*- coding: utf-8 -*-
"""LinearRegression

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LYfHxcqpsNSEjE2LyvxbbQ7KqrumFQhG
"""

# Commented out IPython magic to ensure Python compatibility.
# Importing the libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
# %matplotlib inline

# Importing the dataset and Extracting the Independent and Dependent variables
companies = pd.read_csv('ML-Codes/1000_Companies.csv')
X = companies.iloc[:, :-1].values
y = companies.iloc[:, 4].values

companies.head()

# Data Visualisation
# Building the Correlation matrix
sns.heatmap(companies.corr())

df1=pd.get_dummies(companies['State'], drop_first=True)
companies=pd.concat([df1,companies],axis=1)
companies.drop('State',axis=1,inplace=True)
companies.head()

# Encoding categorical data
#from sklearn.preprocessing import LabelEncoder, OneHotEncoder
#labelencoder = LabelEncoder()
#X[:,3]=labelencoder.fit_transform(X[:,3])
#print(X[:,3])

# Avoiding the Dummy Variable Trap
#X = X[:, 1:]
X=companies.iloc[:,:-1]
y=companies.iloc[:,[5]]

# Splitting the dataset into the Training set and Test set
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

# Fitting Multiple Linear Regression to the Training set
from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train,y_train)

# Predicting the Test set results
y_pred = regressor.predict(X_test)
print(y_pred)

# Calculating the Coefficients
print(regressor.coef_)

# Calculating the Intercept
print(regressor.intercept_)

# Calculating the R squared value
from sklearn.metrics import r2_score
r2_score(y_test, y_pred)